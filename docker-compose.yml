volumes:
  ckan_storage:
  pg_data:
  solr_data:
  pip_cache:
  site_packages:

services:

  nginx:
    build:
      context: nginx/
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - webnet
      - ckannet
    depends_on:
      ckan:
        condition: service_healthy
    ports:
      - "3000:80"
    labels:
      - coolify.managed=true
      - coolify.version=4.0.0-beta.420.6
      - coolify.applicationId=16
      - coolify.type=application
      - coolify.name=nginx-kkkggs88408ccsskc8woo8s4-013515814313
      - coolify.resourceName=pimensckan-dockmaster-io0o404cookw0wok0480044s
      - coolify.projectName=satudata-mataram
      - coolify.serviceName=pimensckan-dockmaster-io0o404cookw0wok0480044s
      - coolify.environmentName=production
      - coolify.pullRequestId=0
      - traefik.enable=true
      - traefik.http.middlewares.gzip.compress=true
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.routers.http-0-kkkggs88408ccsskc8woo8s4-nginx.entryPoints=http
      - traefik.http.routers.http-0-kkkggs88408ccsskc8woo8s4-nginx.middlewares=redirect-to-https
      - 'traefik.http.routers.http-0-kkkggs88408ccsskc8woo8s4-nginx.rule=Host(`ckan.mataramkota.go.id`) && PathPrefix(`/`)'
      - traefik.http.routers.https-0-kkkggs88408ccsskc8woo8s4-nginx.entryPoints=https
      - traefik.http.routers.https-0-kkkggs88408ccsskc8woo8s4-nginx.middlewares=gzip
      - 'traefik.http.routers.https-0-kkkggs88408ccsskc8woo8s4-nginx.rule=Host(`ckan.mataramkota.go.id`) && PathPrefix(`/`)'
      - traefik.http.routers.https-0-kkkggs88408ccsskc8woo8s4-nginx.tls=true
      - traefik.http.services.http-0-kkkggs88408ccsskc8woo8s4.loadbalancer.server.port=3000
      - traefik.http.services.https-0-kkkggs88408ccsskc8woo8s4.loadbalancer.server.port=3000
      - 'caddy_0.encode=zstd gzip'
      - 'caddy_0.handle_path.0_reverse_proxy={{upstreams}}'
      - 'caddy_0.handle_path=/*'
      - caddy_0.header=-Server
      - 'caddy_0.try_files={path} /index.html /index.php'
      - 'caddy_0=https://ckan.mataramkota.go.id'
      - caddy_ingress_network=kkkggs88408ccsskc8woo8s4
    environment:
      COOLIFY_BRANCH: '"master"'
      COOLIFY_RESOURCE_UUID: kkkggs88408ccsskc8woo8s4
      COOLIFY_CONTAINER_NAME: nginx-kkkggs88408ccsskc8woo8s4-013515814313
      SERVICE_URL_NGINX: 'https://ckan.mataramkota.go.id'
      SERVICE_FQDN_NGINX: ckan.mataramkota.go.id
      SERVICE_URL_CKAN: 'https://nsc84gsw8sc8ocskgk84gssw.mataramkota.go.id'
      SERVICE_FQDN_CKAN: nsc84gsw8sc8ocskgk84gssw.mataramkota.go.id
      SERVICE_URL_DATAPUSHER: 'https://bsk04ok0kws08k00848w0o4w.mataramkota.go.id'
      SERVICE_FQDN_DATAPUSHER: bsk04ok0kws08k00848w0o4w.mataramkota.go.id
      COOLIFY_URL: 'https://ckan.mataramkota.go.id'
      COOLIFY_FQDN: ckan.mataramkota.go.id
  ckan:
    build:
      context: ckan/
      dockerfile: Dockerfile
      args:
        - TZ=${TZ}
    networks:
      - ckannet
      - dbnet
      - solrnet
      - redisnet
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      solr:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ckan_storage:/var/lib/ckan
      - pip_cache:/root/.cache/pip
      - site_packages:/usr/lib/python3.10/site-packages
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:5000/api/action/status_show"]
      interval: 60s
      timeout: 10s
      retries: 3
    
  datapusher:
    networks:
      - ckannet
      - dbnet
    image: ckan/ckan-base-datapusher:${DATAPUSHER_VERSION}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8800"]
      interval: 60s
      timeout: 10s
      retries: 3

  db:
    build:
      context: postgresql/
    networks:
      - dbnet
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - CKAN_DB_USER
      - CKAN_DB_PASSWORD
      - CKAN_DB
      - DATASTORE_READONLY_USER
      - DATASTORE_READONLY_PASSWORD
      - DATASTORE_DB
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
     
  solr:
    networks:
      - solrnet
    image: ckan/ckan-solr:${SOLR_IMAGE_VERSION}
    volumes:
      - solr_data:/var/solr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8983/solr/"]

  redis:
    image: redis:${REDIS_VERSION}
    networks:
      - redisnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]
    
networks:
  webnet:
  ckannet:
  solrnet:
    internal: true
  dbnet:
    internal: true
  redisnet:
    internal: true
